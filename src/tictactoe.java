
import java.awt.Color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sourav
 */
public class tictactoe extends javax.swing.JFrame {

    int count=0;
    int status=0;
    /**
     * Creates new form tictactoe
     */
    public tictactoe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        turnoff = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(242, 240, 241));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tic tac Toe");

        b1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.shadow"));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        turnoff.setText("Off");
        turnoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(turnoff, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tf1))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset)
                    .addComponent(turnoff))
                .addGap(7, 7, 7)
                .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoffActionPerformed
    System.exit(0);
    // TODO add your handling code here:
    }//GEN-LAST:event_turnoffActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
    count=0;
    status=0;
    tf1.setText("");
    b1.setText("");
    b1.setBackground(Color.LIGHT_GRAY);
    b2.setText("");
    b2.setBackground(Color.LIGHT_GRAY);
    b3.setText("");
    b3.setBackground(Color.LIGHT_GRAY);
    b6.setText("");
    b6.setBackground(Color.LIGHT_GRAY);
    b5.setText("");
    b5.setBackground(Color.LIGHT_GRAY);
    b4.setText("");
    b4.setBackground(Color.LIGHT_GRAY);
    b9.setText("");
    b9.setBackground(Color.LIGHT_GRAY);
    b8.setText("");
    b8.setBackground(Color.LIGHT_GRAY);
    b7.setText("");
    b7.setBackground(Color.LIGHT_GRAY);
    
        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
    if(b1.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b1.setText("O");
            b1.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b1.setText("X");
            b1.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b1.getText()).equals(b2.getText())&&(b1.getText()).equals(b3.getText()))
            {
                status=1;
                tf1.setText("Player "+b1.getText()+" wins");
            }
             if((b1.getText()).equals(b6.getText())&&(b1.getText()).equals(b9.getText()))
            {
                status=1;
                tf1.setText("Player "+b1.getText()+" wins");
            }
              if((b1.getText()).equals(b5.getText())&&(b1.getText()).equals(b7.getText()))
            {
                status=1;
                tf1.setText("Player "+b1.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
    if(b2.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b2.setText("O");
            b2.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b2.setText("X");
            b2.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b2.getText()).equals(b1.getText())&&(b2.getText()).equals(b3.getText()))
            {
                status=1;
                tf1.setText("Player "+b2.getText()+" wins");
            }
             if((b2.getText()).equals(b5.getText())&&(b2.getText()).equals(b8.getText()))
            {
                status=1;
                tf1.setText("Player "+b2.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
    if(b3.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b3.setText("O");
            b3.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b3.setText("X");
            b3.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b3.getText()).equals(b2.getText())&&(b3.getText()).equals(b1.getText()))
            {
                status=1;
                tf1.setText("Player "+b3.getText()+" wins");
            }
             if((b3.getText()).equals(b6.getText())&&(b3.getText()).equals(b9.getText()))
            {
                status=1;
                tf1.setText("Player "+b3.getText()+" wins");
            }
              if((b3.getText()).equals(b5.getText())&&(b3.getText()).equals(b7.getText()))
            {
                status=1;
                tf1.setText("Player "+b3.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
    if(b4.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b4.setText("O");
            b4.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b4.setText("X");
            b4.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b4.getText()).equals(b1.getText())&&(b4.getText()).equals(b7.getText()))
            {
                status=1;
                tf1.setText("Player "+b4.getText()+" wins");
            }
             if((b4.getText()).equals(b5.getText())&&(b4.getText()).equals(b6.getText()))
            {
                status=1;
                tf1.setText("Player "+b4.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
    if(b5.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b5.setText("O");
            b5.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b5.setText("X");
            b5.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b5.getText()).equals(b2.getText())&&(b5.getText()).equals(b8.getText()))
            {
                status=1;
                tf1.setText("Player "+b5.getText()+" wins");
            }
             if((b5.getText()).equals(b6.getText())&&(b5.getText()).equals(b4.getText()))
            {
                status=1;
                tf1.setText("Player "+b5.getText()+" wins");
            }
              if((b5.getText()).equals(b3.getText())&&(b5.getText()).equals(b7.getText()))
            {
                status=1;
                tf1.setText("Player "+b5.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
    if(b6.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b6.setText("O");
            b6.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b6.setText("X");
            b6.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b6.getText()).equals(b5.getText())&&(b6.getText()).equals(b4.getText()))
            {
                status=1;
                tf1.setText("Player "+b6.getText()+" wins");
            }
             if((b6.getText()).equals(b3.getText())&&(b6.getText()).equals(b9.getText()))
            {
                status=1;
                tf1.setText("Player "+b6.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
    if(b7.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b7.setText("O");
            b7.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b7.setText("X");
            b7.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b7.getText()).equals(b1.getText())&&(b7.getText()).equals(b4.getText()))
            {
                status=1;
                tf1.setText("Player "+b7.getText()+" wins");
            }
             if((b7.getText()).equals(b8.getText())&&(b7.getText()).equals(b9.getText()))
            {
                status=1;
                tf1.setText("Player "+b7.getText()+" wins");
            }
              if((b7.getText()).equals(b5.getText())&&(b7.getText()).equals(b3.getText()))
            {
                status=1;
                tf1.setText("Player "+b7.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
    if(b8.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b8.setText("O");
            b8.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b8.setText("X");
            b8.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b8.getText()).equals(b7.getText())&&(b8.getText()).equals(b9.getText()))
            {
                status=1;
                tf1.setText("Player "+b8.getText()+" wins");
            }
             if((b8.getText()).equals(b5.getText())&&(b8.getText()).equals(b2.getText()))
            {
                status=1;
                tf1.setText("Player "+b8.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
    if(b9.getText()==""&&status==0)
    {
        if(count%2==0)
        {
            b9.setText("O");
            b9.setBackground(Color.red);
        }
        if(count%2==1)
        {
            b9.setText("X");
            b9.setBackground(Color.BLUE);
        }
        count++;
        if(count>=5)
        {
            if((b9.getText()).equals(b6.getText())&&(b9.getText()).equals(b3.getText()))
            {
                status=1;
                tf1.setText("Player "+b9.getText()+" wins");
            }
             if((b9.getText()).equals(b8.getText())&&(b9.getText()).equals(b7.getText()))
            {
                status=1;
                tf1.setText("Player "+b9.getText()+" wins");
            }
              if((b9.getText()).equals(b5.getText())&&(b9.getText()).equals(b1.getText()))
            {
                status=1;
                tf1.setText("Player "+b9.getText()+" wins");
            }
            if(count==9&&status==0)
            {
                tf1.setText("Match Drawn. Try Again!!");
            }
        }
    }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_b9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tictactoe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField tf1;
    private javax.swing.JButton turnoff;
    // End of variables declaration//GEN-END:variables
}
